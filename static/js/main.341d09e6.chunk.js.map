{"version":3,"sources":["Canvas.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["PI","Math","cos","sin","Canvas","props","state","hexSize","firstHexCenter","x","y","nbHexInGrid","nbHexInLine","nbColumn","this","setState","canvasSize","canvasWidth","canvasHeight","canvasHex","width","height","drawGridOddColumn","drawGridEvenColumn","canvasID","center","i","drawGridColumn","ncanvasID","drawHex","start","getHexCornerCoord","end","drawLine","angle_rad","Point","ctx","getContext","beginPath","moveTo","lineTo","stroke","closePath","ref","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341d09e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './canvas.css';\r\n\r\nconst PI = Math.PI;\r\nconst cos = Math.cos;\r\nconst sin = Math.sin;\r\n\r\nexport default class Canvas extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hexSize: 20,\r\n            firstHexCenter: { x: 50, y: 50 },\r\n            nbHexInGrid: 50,\r\n            nbHexInLine: 10,\r\n            nbColumn: 5\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            canvasSize: { canvasWidth: 800, canvasHeight: 600 }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { canvasWidth, canvasHeight, } = this.state.canvasSize;\r\n        this.canvasHex.width = canvasWidth;\r\n        this.canvasHex.height = canvasHeight;\r\n        // Method to draw one hexagone at the intials coordinates\r\n        // this.drawHex(this.canvasHex, { x: this.state.firstHexCenter.x, y: this.state.firstHexCenter.y });\r\n        // Method to draw a column of hexagone (WIP)\r\n        //this.drawGridColumn(this.canvasHex, { x: this.state.firstHexCenter.x, y: this.state.firstHexCenter.y });\r\n        this.drawGridOddColumn(this.canvasHex, { x: this.state.firstHexCenter.x, y: this.state.firstHexCenter.y });\r\n        this.drawGridEvenColumn(this.canvasHex, { x: this.state.firstHexCenter.x, y: this.state.firstHexCenter.y });\r\n\r\n    }\r\n\r\n    //Method to draw ood columns\r\n    drawGridOddColumn(canvasID, center) {\r\n        for (let i = 0; i <= this.state.nbColumn; i++) {\r\n            this.drawGridColumn(\r\n                this.canvasHex, {\r\n\r\n                x: this.state.firstHexCenter.x + i * 3 * this.state.hexSize,\r\n                y: this.state.firstHexCenter.y\r\n            });\r\n        }\r\n    }\r\n\r\n    //Method to draw even columns\r\n    drawGridEvenColumn(ncanvasID, center) {\r\n        for (let i = 0; i <= this.state.nbColumn - 1; i++) {\r\n            this.drawGridColumn(\r\n                this.canvasHex, {\r\n\r\n                x: this.state.firstHexCenter.x + i * 3 * this.state.hexSize + 1.5 * this.state.hexSize,\r\n                y: this.state.firstHexCenter.y + sin(60 * PI / 180) * this.state.hexSize\r\n            });\r\n        }\r\n    }\r\n    /*\r\n        //Method to draw grid (WIP)\r\n        drawGrid(canvasID, center) {\r\n            for (let i = 0, i<= )\r\n        }\r\n    */\r\n\r\n    //Method to draw a column\r\n    drawGridColumn(canvasID, center) {\r\n        for (let i = 0; i <= this.state.nbHexInLine; i++) {\r\n            this.drawHex(\r\n                this.canvasHex,\r\n                {\r\n                    x: center.x,\r\n                    y: i * 2 * sin(60 * PI / 180) * this.state.hexSize + center.y\r\n                });\r\n        }\r\n    }\r\n\r\n    //Method to draw the Hexagone, call 5 times the drawLine methode\r\n    drawHex(canvasID, center) {\r\n        for (let i = 0; i <= 5; i++) {\r\n            let start = this.getHexCornerCoord(center, i);\r\n            let end = this.getHexCornerCoord(center, i + 1);\r\n            this.drawLine(canvasID, { x: start.x, y: start.y }, { x: end.x, y: end.y });\r\n        }\r\n    }\r\n\r\n    //Method to calculate the coordinate of  a sommit from the center\r\n    getHexCornerCoord(center, i) {\r\n\r\n        let angle_deg = 60 * i;\r\n        let angle_rad = PI / 180 * angle_deg;\r\n        let x = center.x + this.state.hexSize * cos(angle_rad);\r\n        let y = center.y + this.state.hexSize * sin(angle_rad);\r\n        return this.Point(x, y);\r\n    }\r\n\r\n    //Generate coordinate in a variable so other methods can use it (?)\r\n    Point(x, y) {\r\n        return { x: x, y: y };\r\n    }\r\n\r\n    //Method to draw between two point (start{x,y} and end{x,y})\r\n    drawLine(canvasID, start, end) {\r\n        const ctx = canvasID.getContext(\"2d\");\r\n        ctx.beginPath();\r\n        ctx.moveTo(start.x, start.y);\r\n        ctx.lineTo(end.x, end.y);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < div >\r\n                <canvas ref={canvasHex => this.canvasHex = canvasHex}></canvas>\r\n            </div >\r\n        )\r\n    }\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport Canvas from './Canvas.jsx'\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      < div >\r\n        <Canvas />\r\n      </div >\r\n    )\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}