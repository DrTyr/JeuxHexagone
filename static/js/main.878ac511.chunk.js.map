{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["PI","Math","cos","sin","Canvas","props","canvasRef","useRef","draw","ctx","fillStyle","beginPath","moveTo","lineTo","fill","arc","useEffect","context","current","getContext","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAe,I,YCITA,EAAKC,KAAKD,GACJC,KAAKC,IACLD,KAAKE,IAgBjB,IAAMC,EAAS,SAAAC,GAEb,IAAMC,EAAYC,iBAAO,MAEnBC,EAAO,SAAAC,GACXA,EAAIC,UAAY,UAChBD,EAAIE,YACJF,EAAIG,OAAO,GAAI,IACfH,EAAII,OAAO,EAAG,IACdJ,EAAII,OAAO,IAAK,IAChBJ,EAAIK,OAEJL,EAAIC,UAAY,UAChBD,EAAIE,YACJF,EAAIM,IAAI,IAAK,IAAK,GAAI,EAAG,EAAIf,GAC7BS,EAAIK,QAeN,OATAE,qBAAU,WAER,IACMC,EADSX,EAAUY,QACFC,WAAW,MAGlCX,EAAKS,KACJ,CAACT,IAEG,oCAAQY,IAAKd,GAAeD,KA0EtBgB,MArHf,WAEE,OAAO,cAAC,EAAD,KCCMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.878ac511.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nconst PI = Math.PI;\r\nconst cos = Math.cos;\r\nconst sin = Math.sin;\r\n\r\n\r\nfunction App() {\r\n\r\n  return <Canvas />\r\n\r\n}\r\n\r\n/* function flat_hex_corner(center, size, i) {\r\n  var angle_deg = 60 * i\r\n  var angle_rad = PI / 180 * angle_deg\r\n  return Point(center.x + size * cos(angle_rad),\r\n    center.y + size * sin(angle_rad))\r\n} */\r\n\r\nconst Canvas = props => {\r\n\r\n  const canvasRef = useRef(null)\r\n\r\n  const draw = ctx => {\r\n    ctx.fillStyle = '#548659'\r\n    ctx.beginPath();\r\n    ctx.moveTo(50, 75);\r\n    ctx.lineTo(0, 50);\r\n    ctx.lineTo(100, 25);\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = '#005485'\r\n    ctx.beginPath()\r\n    ctx.arc(200, 100, 20, 0, 2 * PI)\r\n    ctx.fill()\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n\r\n    //Our draw come here\r\n    draw(context)\r\n  }, [draw])\r\n\r\n  return <canvas ref={canvasRef} {...props} />\r\n}\r\n\r\n\r\n/* function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          CHILDREN OF PROUT\r\n        </p>\r\n        <p>\r\n          {display()}\r\n          //{ Commande pour afficher result foncton display dans le HTML, mettre des {} pour signifier que c'est du JS}\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n} \r\n\r\n*/\r\n\r\n/* const Canvas = props => {\r\n\r\n  const canvasRef = useRef(null)\r\n\r\n  const draw = ctx => {\r\n    ctx.fillStyle = '#000000'\r\n    ctx.beginPath()\r\n    ctx.arc(50, 100, 20, 0, 2 * Math.PI)\r\n    ctx.fill()\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n\r\n    //Our draw come here\r\n    draw(context)\r\n  }, [draw])\r\n\r\n  return <canvas ref={canvasRef} {...props} />\r\n} */\r\n\r\nfunction display(prout) {\r\n\r\n  let week = [\"caca\", \"caca2\"];\r\n\r\n  let week2 = week.map((day) => {\r\n    return (<li>{day}</li>)\r\n  })\r\n\r\n  return (week2)\r\n\r\n\r\n}\r\n\r\n/* const gestion_week = (nbjour) => { } */\r\n\r\n/* test */\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}